// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StorageService.Infrastructure.Context;

#nullable disable

namespace StorageService.Infrastructure.Migrations
{
    [DbContext(typeof(SQLServerContext))]
    [Migration("20250814154424_update_userStorage")]
    partial class update_userStorage
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("StorageService.Domain.StorageType", b =>
                {
                    b.Property<int>("StorageTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("StorageTypeID");

                    b.ToTable("StorageTypes");
                });

            modelBuilder.Entity("StorageService.Domain.UserStorage", b =>
                {
                    b.Property<int>("UserStorageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("StorageTypeID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("UserStorageID");

                    b.HasIndex("StorageTypeID");

                    b.ToTable("UserStorages");
                });

            modelBuilder.Entity("StorageService.Domain.UserStorage", b =>
                {
                    b.HasOne("StorageService.Domain.StorageType", "StorageType")
                        .WithMany("UserStorages")
                        .HasForeignKey("StorageTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StorageType");
                });

            modelBuilder.Entity("StorageService.Domain.StorageType", b =>
                {
                    b.Navigation("UserStorages");
                });
#pragma warning restore 612, 618
        }
    }
}
